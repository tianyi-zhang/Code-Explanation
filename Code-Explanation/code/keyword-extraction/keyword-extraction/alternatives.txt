Updated If you just want the object itself (instead of invoking members), then Outer.this is the way to go.Call DateTimeFormatter.ofLocalizedDate, and be sure to specify the desired/expected Locale rather than rely on the JVMâ€™s current default which can change at any moment during runtime(!).For example, a future release, or OpenJDK, could use the keys() method of Hashtable instead of keySetTo output to stdout rather than stderr, pass System.out to printStackTrace():Are you trying to write the contents of a Reader to an OutputStream? If so, you'll have an easier time wrapping the OutputStream in an OutputStreamWriter and write the chars from the Reader to the Writer, instead of trying to convert the reader to an InputStream:By the way, both LocalDate and YearMonth use month numbers as you would expect (1-12) rather than the screwball 0-11 seen in the old date-time classesI don't think there's any substitute for remembering to do this, but at least now it's a matter of remembering a subclass instead of a setIconImage call (among possibly other features).instead of using object.getClass().getName() you can use object.getClass().getSimpleName(), because it returns a simple class name without a package name included.Instead of using Collections.sort as some do I'd suggest using Arrays.sortNote that you have to use Integer instead of int or you can't use a custom comparator.Edit: I'm now using Arrays.asList instead of Collections.singleton: singleton is limited to one entry, whereas the asList approach allows you to add other strings to filter out later: Arrays.asList("a", "b", "c").and SpringBean is declared within main context, it will have main context injected; otherwise, if it's declared within MVC context, it will have MVC context injected.(The with reference only access is very useful.) If you use protected instead of private for the accessors/references, sub-classes of Foo can even return extended references from getReferenceJetty 9.2 documentation gives a Jetty Embedded example to serve static files using a ResourceHandler instead of a servlet :E.g. in NetBeans, instead of adding -D...=... somewhere, add the property in the action dialog, in a form of java.util.logging.SimpleFormatter.format=%1$tY-%1$tm-... - without any quotes.If this is your concern, and you are ruling static content out, simply modify your Servlet doGet/doPost method to cache the RSS content that you would otherwise return, so that handling each request does not mean re-fetching all of the data all over again.Note that both of these solutions change the Date object passed as a parameter rather than returning a completely new DateMy solution is similar to Iker Jimenez's solution, but instead of using System.setProperty(...) I use org.apache.log4j.PropertyConfigurator.configure(Properties)The real trick is to use the RelativeLayout rather than LinearLayout to position the elements, as shown in this sample layout.xml:You can implement your LinkedProperties which is sorted instead of using the Properties of Java.